{"version":3,"file":"static/js/976.0af2618f.chunk.js","mappings":"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","sources":["component/AddToPlaylistPopup.jsx","component/Footer.jsx","component/SearchResult.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./AddToPlaylistPopup.css\";\n\nexport default function AddToPlaylistPopup({ playlists, onAdd, onClose, position }) {\n    return (\n        <div\n            className=\"popup-container\"\n            style={{ top: position.top, left: position.left }}\n        >\n            <h3>Select a Playlist</h3> \n            <ul>\n                {playlists.map((playlist) => (\n                    <li key={playlist.id}>\n<button\n  onClick={() => {\n    console.log(\"Adding to Playlist ID:\", playlist.id); // Debug playlist ID\n    if (onAdd) {\n      onAdd(playlist.id); // Call the onAdd function with playlist ID\n    } else {\n      console.error(\"onAdd function is missing\");\n    }\n  }}\n>\n  {playlist.name}\n</button>\n                    </li>\n                ))}\n            </ul>\n            <button className=\"close-btn\" onClick={onClose}>\n                Close\n            </button>\n        </div>\n    );\n}\n","// Footer.jsx\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInstagram, faFacebook, faXTwitter, faTwitch, faTiktok, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport \"./Footer.css\"; \n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"ze-logo\">\n        <h3>Movies Now</h3>\n      </div>\n      <div className=\"pro-sources\">\n        <h3>Project Sources</h3> \n        <hr />\n        <ul>\n          <li>TMDB - API for movie info</li>\n          <li>YouTube API - For trailers</li>\n          <li>Google Fonts - For fonts</li>\n          <li>Font Awsome - For icons</li>\n          <li>ChatGPT - For learning</li>\n          <li>Other movie platforms - For UI inspiration</li>\n        </ul>\n      </div>\n      <div>\n        <h3 className='social-color'>Social</h3>\n        <hr />\n        <div className=\"social-icons\">\n          <FontAwesomeIcon icon={faInstagram} className=\"icons\" />\n          <FontAwesomeIcon icon={faFacebook} className=\"icons\" />\n          <FontAwesomeIcon icon={faXTwitter} className=\"icons\" />\n          <FontAwesomeIcon icon={faTwitch} className=\"icons\" />\n          <FontAwesomeIcon icon={faTiktok} className=\"icons\" />\n          <FontAwesomeIcon icon={faYoutube} className=\"icons\" />\n        </div>\n      </div>\n      <div>\n        <button onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>\n          &#8593; back to top &#8593;\n        </button>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faList, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport Footer from \"./Footer\";\nimport \"./Header.css\";\nimport AddToPlaylistPopup from \"./AddToPlaylistPopup\";\nimport \"./SearchResult.css\"; \n\nfunction SearchResult({ playlists, addMovieToPlaylist, addShowToPlaylist }) {\n  const { query, type } = useParams();\n  const navigate = useNavigate();\n  const [results, setResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\n\n  const API_KEY = \"808196157aa973f359929571d9321e60\";\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const endpointType = type === \"movie\" ? \"movie\" : \"tv\";\n        const url = `https://api.themoviedb.org/3/search/${endpointType}?api_key=${API_KEY}&query=${query}`;\n        const response = await fetch(url);\n        const data = await response.json();\n\n        if (response.ok) {\n          console.log(\"Fetched search results:\", data.results);\n          setResults(data.results || []);\n        } else {\n          setError(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching search results:\", error);\n        setError(\"Failed to fetch data\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchResults();\n  }, [query, type]);\n\n  const handleCardClick = (item) => {\n    navigate(`/details/${type}/${item.id}`);\n  };\n\n  const handleOpenPopup = (item, button) => {\n    const buttonRect = button.getBoundingClientRect();\n    setPopupPosition({\n      top: buttonRect.bottom + window.scrollY,\n      left: buttonRect.left + window.scrollX,\n    });\n    setSelectedItem(item);\n    setIsPopupOpen(true);\n  };\n\n  const handleAddToPlaylist = (playlistId) => {\n    console.log(\"Selected Item before adding:\", selectedItem);\n  \n    if (type === \"tv\" || selectedItem.first_air_date) {\n      console.log(\"Adding TV show to playlist\");\n      const standardizedShow = {\n        id: selectedItem.id,\n        type: \"tv\",\n        title: selectedItem.name || selectedItem.title || \"Untitled Show\",\n        poster_path: selectedItem.poster_path || null,\n        release_date: selectedItem.first_air_date || \"N/A\",\n        vote_average: selectedItem.vote_average || 0,\n        original_language: selectedItem.original_language || \"N/A\",\n        genre_ids: selectedItem.genre_ids || [],\n        overview: selectedItem.overview || \"\",\n        backdrop_path: selectedItem.backdrop_path || null,\n      };\n      console.log(\"Invoking addShowToPlaylist with:\", playlistId, standardizedShow);\n      addShowToPlaylist(playlistId, standardizedShow);\n    } else if (type === \"movie\" || selectedItem.release_date) {\n      console.log(\"Adding movie to playlist\");\n      const standardizedMovie = {\n        id: selectedItem.id,\n        type: \"movie\",\n        title: selectedItem.title || \"Untitled Movie\",\n        poster_path: selectedItem.poster_path || null,\n        release_date: selectedItem.release_date || \"N/A\",\n        vote_average: selectedItem.vote_average || 0,\n        original_language: selectedItem.original_language || \"N/A\",\n        genre_ids: selectedItem.genre_ids || [],\n        overview: selectedItem.overview || \"\",\n        backdrop_path: selectedItem.backdrop_path || null,\n      };\n      console.log(\"Invoking addMovieToPlaylist with:\", playlistId, standardizedMovie);\n      addMovieToPlaylist(playlistId, standardizedMovie);\n    } else {\n      console.error(\"Unknown type for selected item:\", selectedItem);\n    }\n  \n    setIsPopupOpen(false); // Close popup after adding\n  };\n          \n  return (\n    <div>\n      <div className=\"search-results-container\">\n        <h1>\n          Search Results for: {query} ({type === \"movie\" ? \"Movies\" : \"TV Shows\"})\n        </h1>\n        <div className=\"results-list\">\n          {isLoading ? (\n            <div>Loading...</div>\n          ) : error ? (\n            <div>Error: {error}</div>\n          ) : results.length > 0 ? (\n            results.map((item) => (\n              <div\n                key={item.id}\n                className=\"film-card\"\n                onClick={() => handleCardClick(item)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${item.poster_path}`}\n                  alt={item.title || item.name}\n                />\n                <h3>{item.title || item.name}</h3>\n                <button\n                  className=\"add-movie\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleOpenPopup(item, e.target);\n                  }}\n                >\n                  <FontAwesomeIcon className=\"list-img\" icon={faList} />\n                  <p>Add {type === \"movie\" ? \"Movie\" : \"Show\"}</p>\n                </button>\n                <div className=\"stars\">\n                  <p className=\"p1\">\n                    {item.release_date\n                      ? item.release_date.slice(0, 4)\n                      : item.first_air_date\n                      ? item.first_air_date.slice(0, 4)\n                      : \"N/A\"}\n                  </p>\n                  <div className=\"p2\">\n                    <FontAwesomeIcon id=\"rate-star\" icon={faStar} />\n                    <p>{item.vote_average ? item.vote_average.toFixed(1) : \"N/A\"}</p>\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p>No results found for \"{query}\".</p>\n          )}\n        </div>\n      </div>\n\n      {isPopupOpen && (\n        <AddToPlaylistPopup\n          playlists={playlists}\n          onAdd={handleAddToPlaylist}\n          onClose={() => setIsPopupOpen(false)}\n          position={popupPosition}\n        />\n      )} \n\n      <Footer className=\"footer-help\" />\n    </div>\n  );\n}\n\nexport default SearchResult;\n"],"names":["AddToPlaylistPopup","_ref","playlists","onAdd","onClose","position","_jsxs","className","style","top","left","children","_jsx","map","playlist","onClick","console","log","id","error","name","FontAwesomeIcon","icon","faInstagram","faFacebook","faXTwitter","faTwitch","faTiktok","faYoutube","window","scrollTo","behavior","addMovieToPlaylist","addShowToPlaylist","query","type","useParams","navigate","useNavigate","results","setResults","useState","isLoading","setIsLoading","setError","isPopupOpen","setIsPopupOpen","selectedItem","setSelectedItem","popupPosition","setPopupPosition","useEffect","async","url","response","fetch","data","json","ok","fetchSearchResults","length","item","handleCardClick","cursor","src","poster_path","alt","title","e","stopPropagation","handleOpenPopup","button","buttonRect","getBoundingClientRect","bottom","scrollY","scrollX","target","faList","release_date","slice","first_air_date","faStar","vote_average","toFixed","playlistId","standardizedShow","original_language","genre_ids","overview","backdrop_path","standardizedMovie","Footer"],"sourceRoot":""}