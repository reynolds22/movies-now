{"version":3,"file":"static/js/624.56c0e326.chunk.js","mappings":"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","sources":["component/AddToPlaylistPopup.jsx","component/MovieDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./AddToPlaylistPopup.css\";\n\nexport default function AddToPlaylistPopup({ playlists, onAdd, onClose, position }) {\n    return (\n        <div\n            className=\"popup-container\"\n            style={{ top: position.top, left: position.left }}\n        >\n            <h3>Select a Playlist</h3> \n            <ul>\n                {playlists.map((playlist) => (\n                    <li key={playlist.id}>\n<button\n  onClick={() => {\n    console.log(\"Adding to Playlist ID:\", playlist.id); // Debug playlist ID\n    if (onAdd) {\n      onAdd(playlist.id); // Call the onAdd function with playlist ID\n    } else {\n      console.error(\"onAdd function is missing\");\n    }\n  }}\n> \n  {playlist.name}\n</button>\n                    </li>\n                ))}\n            </ul>\n            <button className=\"close-btn\" onClick={onClose}>\n                Close\n            </button>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./movieDetails.css\";\nimport AddToPlaylistPopup from \"./AddToPlaylistPopup\";\n\nexport default function MovieDetails({ addMovieToPlaylist, playlists }) {\n  const { id, type } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [trailerKey, setTrailerKey] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\n\n  const API_KEY = \"808196157aa973f359929571d9321e60\";\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const endpointType = type === \"movie\" ? \"movie\" : \"tv\";\n\n        const detailsRes = await fetch(\n          `https://api.themoviedb.org/3/${endpointType}/${id}?api_key=${API_KEY}&language=en-US`\n        );\n        const detailsData = await detailsRes.json();\n        setMovie(detailsData);\n\n        const creditsRes = await fetch(\n          `https://api.themoviedb.org/3/${endpointType}/${id}/credits?api_key=${API_KEY}`\n        );\n        const creditsData = await creditsRes.json();\n        setCast(creditsData.cast.slice(0, 10));\n\n        const videosRes = await fetch(\n          `https://api.themoviedb.org/3/${endpointType}/${id}/videos?api_key=${API_KEY}&language=en-US`\n        );\n        const videosData = await videosRes.json();\n        const trailer = videosData.results.find((video) => video.type === \"Trailer\");\n        setTrailerKey(trailer?.key || null);\n\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Failed to fetch movie details:\", error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id, type]);\n\n  const handleOpenPopup = (event) => {\n    const buttonRect = event.target.getBoundingClientRect();\n    setPopupPosition({\n      top: buttonRect.bottom + window.scrollY,\n      left: buttonRect.left + window.scrollX,\n    });\n    setIsPopupOpen(true);\n  };\n\n  const handleAddToPlaylist = (playlistId) => {\n    const standardizedItem = {\n      id: movie.id,\n      title: movie.title || movie.name || \"Untitled\",\n      poster_path: movie.poster_path || \"default.jpg\",\n      release_date: movie.release_date || movie.first_air_date || \"N/A\",\n      vote_average: movie.vote_average || 0,\n    };\n    addMovieToPlaylist(playlistId, standardizedItem);\n    setIsPopupOpen(false);\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!movie) {\n    return <div>Movie details not found.</div>;\n  }\n\n  return (\n    <div className=\"movie-details\">\n      <button className=\"back-button\" onClick={() => navigate(-1)}>\n        <FontAwesomeIcon icon={faArrowLeft} /> Back\n      </button>\n      <div className=\"poster-trailer\">\n\n        <div className=\"movie-banner\">\n          <img\n            src={\n              movie.backdrop_path\n                ? `https://image.tmdb.org/t/p/original${movie.poster_path}`\n                : \"default.jpg\"\n            }\n            alt={movie.title || movie.name || \"Image not available\"}\n          />\n        </div>\n\n        <div className=\"details-right\">\n          <h1 className=\"movie-title\">{movie.title || movie.name || \"Title not available\"}</h1>\n          <div className=\"trailer-con\">\n            {trailerKey && (\n              <div className=\"movie-trailer\">\n                <iframe\n                  src={`https://www.youtube.com/embed/${trailerKey}`}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title=\"Trailer\"\n                ></iframe>\n              </div>\n            )}\n          </div>\n        </div> \n\n      </div>\n\n      <div className=\"movie-info\">\n        <p>{movie.overview || \"Description not available.\"}</p>\n\n        <div className=\"movie-stats\">\n          <p>\n            <FontAwesomeIcon icon={faStar} /> Rating:{\" \"}\n            {movie.vote_average ? movie.vote_average.toFixed(1) : \"N/A\"}\n          </p>\n          <p>\n            Release Date: {movie.release_date || movie.first_air_date || \"N/A\"}\n          </p>\n        </div>\n\n        <button\n          className=\"add-to-playlist\"\n          onClick={(event) => handleOpenPopup(event)}\n        >\n          Add to Playlist\n        </button>\n      </div>\n\n      <div className=\"movie-cast\">\n        <h2>Cast</h2>\n        <ul>\n          {cast.map((member) => (\n            <li key={member.id}>\n              <img\n                src={\n                  member.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${member.profile_path}`\n                    : \"default_profile.jpg\"\n                }\n                alt={member.name}\n              />\n              <p>{member.name}</p>\n              <p>as {member.character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {isPopupOpen && (\n        <AddToPlaylistPopup\n          playlists={playlists}\n          onAdd={handleAddToPlaylist}\n          onClose={() => setIsPopupOpen(false)}\n          position={popupPosition}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":["AddToPlaylistPopup","_ref","playlists","onAdd","onClose","position","_jsxs","className","style","top","left","children","_jsx","map","playlist","onClick","console","log","id","error","name","MovieDetails","addMovieToPlaylist","type","useParams","navigate","useNavigate","movie","setMovie","useState","cast","setCast","trailerKey","setTrailerKey","isLoading","setIsLoading","isPopupOpen","setIsPopupOpen","popupPosition","setPopupPosition","API_KEY","useEffect","async","endpointType","detailsRes","fetch","detailsData","json","creditsRes","creditsData","slice","videosRes","trailer","results","find","video","key","fetchMovieDetails","FontAwesomeIcon","icon","faArrowLeft","src","backdrop_path","poster_path","alt","title","frameBorder","allow","allowFullScreen","overview","faStar","vote_average","toFixed","release_date","first_air_date","event","buttonRect","target","getBoundingClientRect","bottom","window","scrollY","scrollX","handleOpenPopup","member","profile_path","character","playlistId","standardizedItem"],"sourceRoot":""}